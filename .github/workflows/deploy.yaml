name: Build and Deploy to EKS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1 
  ECR_REPOSITORY: oasis-scribe
  IMAGE_TAG: latest
  DEPLOYMENT_NAME: oasis-scribe
  CLUSTER_NAME: your-eks-cluster

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG . \
            --build-arg DATABASE_URL=${{ secrets.DB_URL }} \
            --build-arg OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }} \
            --build-arg ASSEMBLYAI_API_KEY=${{ secrets.ASSEMBLYAI_API_KEY }}
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Deploy to EKS
        run: |
          kubectl apply -f ./k8s/deploy.yaml
          kubectl set image deployment/$DEPLOYMENT_NAME \
            $DEPLOYMENT_NAME=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
